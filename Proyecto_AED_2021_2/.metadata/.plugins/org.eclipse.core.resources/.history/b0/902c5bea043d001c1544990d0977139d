package guis;

import java.awt.EventQueue;
import clases.Alumno;
import arreglos.ArregloAlumnos;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;

public class DlgAlumnos extends JDialog implements ActionListener {
	private JLabel lblCodigo;
	private JTextField txtCodigo;
	private JLabel lblNombre;
	private JTextField txtNombre;
	private JLabel lblDni;
	private JTextField txtDNI;
	private JTextField txtEdad;
	private JLabel lblApellidos;
	private JTextField txtApellidos;
	private JLabel lblCelular;
	private JTextField txtCelular;
	private JLabel lblEdad;
	private JLabel lblEstado;
	private JTextField txtEstado;
	private JScrollPane scrollPane;
	private JButton btnAdicionar;
	private JButton btnConsultar;
	private JButton btnEliminar;
	private JButton btnModificar;
	private DefaultTableModel tabla;
	private JTable tblTable;
	
	
	//  Tipo de operación a procesar: Adicionar, Consultar, Modificar o Eliminar
	private int tipoOperacion;
	
	//  Constantes para los tipos de operaciones
	public final static int ADICIONAR = 0;
	public final static int CONSULTAR = 1;
	public final static int MODIFICAR = 2;
	public final static int ELIMINAR  = 3;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DlgAlumnos dialog = new DlgAlumnos();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DlgAlumnos() {
		setTitle("Alumnos");
		setBounds(100, 100, 590, 473);
		getContentPane().setLayout(null);
		
		lblCodigo = new JLabel("C\u00F3digo:");
		lblCodigo.setBounds(10, 21, 46, 14);
		getContentPane().add(lblCodigo);
		
		txtCodigo = new JTextField();
		txtCodigo.setBounds(76, 18, 95, 20);
		getContentPane().add(txtCodigo);
		txtCodigo.setColumns(10);
		
		lblNombre = new JLabel("Nombre:");
		lblNombre.setBounds(10, 46, 46, 14);
		getContentPane().add(lblNombre);
		
		txtNombre = new JTextField();
		txtNombre.setBounds(76, 43, 122, 20);
		getContentPane().add(txtNombre);
		txtNombre.setColumns(10);
		
		lblDni = new JLabel("DNI:");
		lblDni.setBounds(10, 96, 46, 14);
		getContentPane().add(lblDni);
		
		txtDNI = new JTextField();
		txtDNI.setBounds(76, 93, 95, 20);
		getContentPane().add(txtDNI);
		txtDNI.setColumns(10);
		
		lblEdad = new JLabel("Edad:");
		lblEdad.setBounds(10, 122, 46, 14);
		getContentPane().add(lblEdad);
		
		txtEdad = new JTextField();
		txtEdad.setBounds(76, 119, 46, 20);
		getContentPane().add(txtEdad);
		txtEdad.setColumns(10);
		
		lblApellidos = new JLabel("Apellidos: ");
		lblApellidos.setBounds(10, 71, 62, 14);
		getContentPane().add(lblApellidos);
		
		txtApellidos = new JTextField();
		txtApellidos.setBounds(76, 68, 122, 20);
		getContentPane().add(txtApellidos);
		txtApellidos.setColumns(10);
		
		lblCelular = new JLabel("Celular:");
		lblCelular.setBounds(10, 147, 46, 14);
		getContentPane().add(lblCelular);
		
		txtCelular = new JTextField();
		txtCelular.setBounds(76, 144, 95, 20);
		getContentPane().add(txtCelular);
		txtCelular.setColumns(10);
		
		lblEstado = new JLabel("Estado:");
		lblEstado.setBounds(10, 172, 46, 14);
		getContentPane().add(lblEstado);
		
		txtEstado = new JTextField();
		txtEstado.setBounds(76, 169, 46, 20);
		getContentPane().add(txtEstado);
		txtEstado.setColumns(10);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 205, 554, 218);
		getContentPane().add(scrollPane);
		
		tblTable = new JTable();
		scrollPane.setViewportView(tblTable);
		
		btnAdicionar = new JButton("Adicionar");
		btnAdicionar.addActionListener(this);
		btnAdicionar.setBounds(461, 17, 89, 31);
		getContentPane().add(btnAdicionar);
		
		btnConsultar = new JButton("Consultar");
		btnConsultar.addActionListener(this);
		btnConsultar.setBounds(461, 67, 89, 31);
		getContentPane().add(btnConsultar);
		
		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(461, 164, 89, 31);
		getContentPane().add(btnEliminar);
		
		btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(this);
		btnModificar.setBounds(461, 114, 89, 31);
		getContentPane().add(btnModificar);
		
		tabla = new DefaultTableModel();
		tabla.addColumn("Codigo");
		tabla.addColumn("Nombres");
		tabla.addColumn("Apellidos");
		tabla.addColumn("DNI");
		tabla.addColumn("Edad");
		tabla.addColumn("Celular");
		tabla.addColumn("Estado: ");
		tblTable.setModel(tabla);
		
		btnOpciones = new JButton("Opciones");
		btnOpciones.addActionListener(this);
		btnOpciones.setBounds(346, 39, 89, 128);
		getContentPane().add(btnOpciones);
		
		listar();
	}
	
	ArregloAlumnos aa = new ArregloAlumnos();
	private JButton btnOpciones;
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnOpciones) {
			actionPerformedBtnOpciones(e);
		}
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnModificar) {
			actionPerformedBtnModificar(e);
		}
		if (e.getSource() == btnAdicionar) {
			actionPerformedBtnAdicionar(e);
		}
		if (e.getSource() == btnConsultar) {
			actionPerformedBtnConsultar(e);
		}
	}
	protected void actionPerformedBtnOpciones(ActionEvent e) {
		txtNombre.setText("");
		txtApellidos.setText("");
		txtDNI.setText("");
		txtEdad.setText("");
	}
	protected void actionPerformedBtnConsultar(ActionEvent e) {
		int codigo = leerCodigo();
		if(validarNumeros(txtCodigo.getText().trim())) {
			mensaje("Datos del Código no son correcto");
		}
		else {
			Alumno x = aa.buscar(codigo);
			if(x != null ) {
				txtNombre.setText(x.getNombres());
				txtApellidos.setText("" + x.getApellidos());
				txtDNI.setText("" + x.getDni());
				txtEdad.setText("" + x.getDni());
				txtCelular.setText("" + x.getCelular());
				txtEstado.setText("" + x.getEstado());
				txtCodigo.requestFocus();
			}
			else {
				mensaje("No existe el codigo");
				limpieza();
			}
		}
		
		
	}

	void listar() {
		tabla.setRowCount(0);
		for (int i=0; i<aa.tamanio(); i++) {
			Object[] fila = { aa.obtener(i).getCodAlumno(),
					          aa.obtener(i).getNombres(),
					          aa.obtener(i).getApellidos(),
					          aa.obtener(i).getDni(),
					          aa.obtener(i).getEdad(),
					          aa.obtener(i).getCelular(),
					          aa.obtener(i).getEstado()};
			tabla.addRow(fila);
		}
	}
	protected void actionPerformedBtnAdicionar(ActionEvent e) {
		int codigo = leerCodigo();
		
		if (aa.buscar(codigo) == null) {
			String nombre = leerNombre();
			String apellido = leerApellidos();
			String dni = leerDni();
			int edad = leerEdad();
			int celular = leerCelular();
			int estado = leerEstado();
			//Adicionamos a traves del contructor
			Alumno nuevo = new Alumno(codigo, nombre, apellido, dni, edad, celular, estado);
			aa.adicionar(nuevo);
			listar();
			
		}
		else {
			mensaje("Codigo ya exite");
			limpieza();
		}
	}
	protected void actionPerformedBtnModificar(ActionEvent e) {
		int codigo = leerCodigo();
		Alumno x = aa.buscar(codigo);
		if (x != null) {
			String nombre = leerNombre();
			String apellido = leerApellidos();
			String dni = leerDni();
			int edad = leerEdad();
			int celular = leerCelular();
			int estado = leerEstado();
			x.setNombres(nombre);
			x.setApellido(apellido);
			x.setDni(dni);
			x.setEdad(edad);
			x.setCelular(celular);
			x.setEstado(estado);
			listar();
		}
		else
			mensaje("el CÓDIGO no existe");
		limpieza();
	}
	protected void actionPerformedBtnEliminar(ActionEvent e) {
	}
	
	void limpieza() {
		txtCodigo.setText("");
		txtNombre.setText("");
		txtApellidos.setText("");
		txtDNI.setText("");
		txtEdad.setText("");
		txtCelular.setText("");
		txtEstado.setText("");
	}
	
	
	
	//Recogo de valores
	int leerCodigo() {
		
		return Integer.parseInt(txtCodigo.getText().trim());
	}
	String leerNombre() {
		return txtNombre.getText().trim();
	}
	String leerApellidos() {
		return txtApellidos.getText().trim();
	}
	String leerDni() {
		return txtDNI.getText().trim();
	}
	int leerEdad() {
		return Integer.parseInt(txtEdad.getText().trim());
	}
	int leerCelular() {
		return Integer.parseInt(txtCelular.getText().trim());
	}
	int leerEstado() {
		return Integer.parseInt(txtEstado.getText().trim());
	}
	
	void mensaje(String mensaje) {
		JOptionPane.showMessageDialog(this, mensaje);
	}
	
	//Habilitar caja de texto
	void habilitartxt(boolean condicional) {
		txtNombre.setEnabled(condicional);
		txtApellidos.setEnabled(condicional);
		txtDNI.setEnabled(condicional);
		
	}
	
	public boolean validarNumeros(String datos) {
		return datos.matches("[a-zA-Z]");
	}
	
}
